swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  # Get User Account Information
  /user/{user_id}/accounts:
  get:
    security:
      - Bearer: []
    tags:
      - Accounts Module
    summary: Retrieve user account information
    description: Retrieves a list of accounts associated with the specified user.
      Each account includes basic information such as account title and current balance.
    parameters:
      - in: path
        name: user_id
        description: User identification
        required: true
        type: string
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        required: true
        type: string
    produces:
      - application/json
    responses:
      "200":
        description: Successfully retrieved user account information
        schema:
          type: array
          items:
            $ref: "#/definitions/Account"
      "400":
        description: Bad request
      "404":
        description: Accounts not found
      "500":
        description: Internal Server Error
  post:
    security:
      - Bearer: []
    tags:
      - Accounts Module
    summary: Transaction API
    description: API to post a account
    parameters:
      - in: path
        name: user_id
        description: User identification
        required: true
        type: string
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: Transmission Payload
        required: true
        schema:
          $ref: "#/definitions/Transaction"
    produces:
      - application/json
    responses:
      "200":
        description: User account posted successully
      "400":
        description: Invalid Fields
      "500":
        description: Internal Server Error
 
  # Get Account Transactions
  /user/{user_id}/accounts/{account_id}/transactions:
  # get:
  #   security:
  #     - Bearer: []
  #   tags:
  #     - Transactions Module
  #   summary: Retrieve account transactions
  #   description: |
  #     Retrieves a list of transactions associated with the specified account.
  #   parameters:
  #     - in: path
  #       name: user_id
  #       description: User identification
  #       required: true
  #       schema:
  #         type: string
  #         example: "123456789" # Example user ID
  #     - in: path
  #       name: account_id
  #       description: Account identification
  #       required: true
  #       schema:
  #         type: string
  #         example: "987654321" # Example account ID
  #     - in: header
  #       name: Authorization
  #       description: Bearer JWT token
  #       required: true
  #       schema:
  #         type: string
  #   produces:
  #     - application/json
  #   responses:
  #     "200":
  #       description: Successfully retrieved account transactions
  #       schema:
  #         type: array
  #         items:
  #           $ref: "#/definitions/Transaction"
  #     "400":
  #       description: Bad request
  #     "404":
  #       description: Transactions not found
  #     "500":
  #       description: Internal Server Error

#   # Get Transaction Details
# /user/{user_id}/accounts/{account_id}/transactions/{transaction_id}:
#   get:
#     security:
#       - Bearer: []
#     tags:
#       - Transactions Module
#     summary: Retrieve transaction details
#     description: |
#       Retrieves detailed information about a specific transaction.
#     parameters:
#       - in: path
#         name: user_id
#         description: User identification
#         required: true
#         schema:
#           type: string
#           example: "123456789" # Example user ID
#       - in: path
#         name: account_id
#         description: Account identification
#         required: true
#         schema:
#           type: string
#           example: "987654321" # Example account ID
#       - in: path
#         name: transaction_id
#         description: Transaction identification
#         required: true
#         schema:
#           type: string
#           example: "567890123" # Example transaction ID
#       - in: header
#         name: Authorization
#         description: Bearer JWT token
#         required: true
#         schema:
#           type: string
#     produces:
#       - application/json
#     responses:
#       "200":
#         description: Successfully retrieved transaction details
#         schema:
#           $ref: "#/definitions/Transaction"
#       "400":
#         description: Bad request
#       "404":
#         description: Transaction not found
#       "500":
#         description: Internal Server Error

#   # Add Transaction Note
# /user/{user_id}/accounts/{account_id}/transactions/{transaction_id}/note:
#    post:
#     security:
#       - Bearer: []
#     tags:
#       - Transactions Module
#     summary: Add note to transaction
#     description: |
#       Adds a note to a specific transaction.
#     parameters:
#       - in: path
#         name: user_id
#         description: User identification
#         required: true
#         schema:
#           type: string
#           example: "123456789" # Example user ID
#       - in: path
#         name: account_id
#         description: Account identification
#         required: true
#         schema:
#           type: string
#           example: "987654321" # Example account ID
#       - in: path
#         name: transaction_id
#         description: Transaction identification
#         required: true
#         schema:
#           type: string
#           example: "567890123" # Example transaction ID
#       - in: header
#         name: Authorization
#         description: Bearer JWT token
#         required: true
#         schema:
#           type: string
#     requestBody:
#       content:
#         application/json:
#           schema:
#             type: object
#             properties:
#               note:
#                 type: string
#                 description: Transaction note to add
#     responses:
#       "200":
#         description: Transaction note added successfully
#       "400":
#         description: Bad request
#       "404":
#         description: Transaction not found
#       "500":
#         description: Internal Server Error
#   # Update Transaction Note
#    put:
#     security:
#       - Bearer: []
#     tags:
#       - Transactions Module
#     summary: Update note of transaction
#     description: |
#       Updates the note of a specific transaction.
#     parameters:
#       - in: path
#         name: user_id
#         description: User identification
#         required: true
#         schema:
#           type: string
#           example: "123456789" # Example user ID
#       - in: path
#         name: account_id
#         description: Account identification
#         required: true
#         schema:
#           type: string
#           example: "987654321" # Example account ID
#       - in: path
#         name: transaction_id
#         description: Transaction identification
#         required: true
#         schema:
#           type: string
#           example: "567890123" # Example transaction ID
#       - in: header
#         name: Authorization
#         description: Bearer JWT token
#         required: true
#         schema:
#           type: string
#     requestBody:
#       content:
#         application/json:
#           schema:
#             type: object
#             properties:
#               note:
#                 type: string
#                 description: Updated transaction note
#     responses:
#       "200":
#         description: Transaction note updated successfully
#       "400":
#         description: Bad request
#       "404":
#         description: Transaction not found
#       "500":
#         description: Internal Server Error

#   # Delete Transaction Note/categorie
#   delete:
#     security:
#       - Bearer: []
#     tags:
#       - Transactions Module
#     summary: Delete note of transaction
#     description: |
#       Deletes the note of a specific transaction.
#     parameters:
#       - in: path
#         name: user_id
#         description: User identification
#         required: true
#         schema:
#           type: string
#           example: "123456789" # Example user ID
#       - in: path
#         name: account_id
#         description: Account identification
#         required: true
#         schema:
#           type: string
#           example: "987654321" # Example account ID
#       - in: path
#         name: transaction_id
#         description: Transaction identification
#         required: true
#         schema:
#           type: string
#           example: "567890123" # Example transaction ID
#       - in: header
#         name: Authorization
#         description: Bearer JWT token
#         required: true
#         schema:
#           type: string
#     responses:
#       "200":
#         description: Transaction note deleted successfully
#       "400":
#         description: Bad request
#       "404":
#         description: Transaction not found
#       "500":
#         description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the account
      accountTitle:
        type: string
        description: Title of the account
      amount:
        type: number
        description: Current balance of the account
      description:
        type: string
        description: Description of the account

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the transaction
      accountId:
        type: string
        description: ID of the account associated with the transaction
      amount:
        type: number
        description: Amount of the transaction
      note:
        type: string
        description: Note associated with the transaction
  
  TransactionUpdate:
    type: object
    properties:
      note:
        type: string
        description: Updated note for the transaction